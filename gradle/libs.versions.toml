[versions]
androidPlugin = "8.2.2"
kotlinAndroid = "1.9.0"
hilt = "2.50"
lifecycle = "2.7.0"
retrofit = "2.9.0"
okhttp = "4.12.0"
coroutines = "1.7.3"

# Testing
mockk = "1.13.9"

[libraries]
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
lifecycle-viewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# Testing
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockk" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
dagger-hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
dagger-hilt-testing-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

[plugins]
android = { id = "com.android.application", version.ref = "androidPlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinAndroid" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
